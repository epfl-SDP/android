package ch.epfl.sdp.mobile.sharedTest

import kotlinx.collections.immutable.PersistentMap

/**
 * Gets a value if it exists, or puts the value generated by [ifAbsent] in the [PersistentMap]
 * before returning it if it's not present.
 *
 * @see [MutableMap.getOrPut] the mutable equivalent for this function.
 *
 * @param K the type of the keys in the map.
 * @param V the type of the values in the map.
 * @param key the key to search for.
 * @param ifAbsent the function which generates a value if it's missing.
 *
 * @return a [Pair] of the updated map and the value found.
 */
inline fun <K, V> PersistentMap<K, V>.getOrPut(
    key: K,
    ifAbsent: () -> V,
): Pair<PersistentMap<K, V>, V> {
  val existing = get(key)
  return if (existing == null) {
    val value = ifAbsent()
    put(key, value) to value
  } else {
    this to existing
  }
}
